global
    stats socket /var/run/haproxy/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
    log stdout format raw daemon debug

    maxconn 100

    # generated 2022-01-13, Mozilla Guideline v5.6, HAProxy 2.5, OpenSSL 1.1.1k, modern configuration
    # https://ssl-config.mozilla.org/#server=haproxy&version=2.5&config=modern&openssl=1.1.1k&guideline=5.6
    # modern configuration
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets

    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tlsv12 no-tls-tickets

defaults
    log global
    option tcplog

    # If you enable teleport, probably set these to more like 2h so your SSH sessions don't get timed out in 30 seconds
    timeout client 30s
    timeout server 30s
    timeout connect 10s

frontend public_ssl
    bind :::443 v4v6
    mode tcp

    tcp-request inspect-delay 5s
    tcp-request content capture req.ssl_sni len 250
    tcp-request content accept if { req_ssl_hello_type 1 }

    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq ssl_fc_has_sni '%[ssl_fc_has_sni]' sni:'%[capture.req.hdr(0)]' ssl_fc_sni '%[ssl_fc_sni]' ssl_fc_protocol '%[ssl_fc_protocol]' ssl_bc '%[ssl_bc]' ssl_bc_alpn '%[ssl_bc_alpn]' ssl_bc_protocol '%[ssl_bc_protocol]' ssl_c_i_dn '%[ssl_c_i_dn()]' ssl_c_s_dn '%[ssl_c_s_dn()]' ssl_f_i_dn '%[ssl_f_i_dn()]' ssl_f_s_dn '%[ssl_f_s_dn]' ssl_fc_cipher '%[ssl_fc_cipher]'"

    use_backend be_acme if { req.ssl_alpn acme-tls/1 }

    # Add your other backends here, routed using SNI
    # A single subdomain:
    # use_backend be_ssl_server if { req.ssl_sni -i subdomain.mydomain.com }
    # A wildcard subdomain: (not supported by ACME)
    # use_backend be_ssl_server if { req.ssl_sni -i -m end .sites.mydomain.com }
    # Teleport (goteleport.com) when multiplexing through port 443
    # use_backend be_teleport_sni if { req.ssl_sni -i -m reg ^[a-z0-9]+\.tele\.mydomain\.com$ }
    # use_backend be_teleport_sni if { req.ssl_sni -i -m reg ^[0-9a-f]+\.teleport\.cluster\.local$ }

    # Comment this out or redirect elsewhere once configured
    default_backend be_readme

#
# ACME
# Necessary for acme.sh support which is the whole point of this repo
#
backend be_acme
    mode tcp
    server acme_sh localhost:12443 disabled

#
# README.md for initial config
# Delete these two sections when configuring!
#
backend be_readme
    mode tcp
    server readme localhost:10443 send-proxy-v2-ssl-cn

frontend fe_readme
    bind 127.0.0.1:10443 accept-proxy ssl alpn h2,http/1.1 crt /usr/local/etc/haproxy-certs/haproxy-acme.pem
    bind :::80 v4v6
    mode http
    monitor-uri /
    errorfile 200 /usr/local/etc/haproxy/README.haproxy


#
# SSL wrapped HTTP host using ACME
#
# backend be_ssl_server
#     mode tcp
#     # Use a different port for each of these
#     server ssl_server_frontend 127.0.0.1:11443 send-proxy-v2-ssl-cn
# frontend fe_ssl_server
#     # UPDATE THIS: The cert name here is used to infer the host you'd like to create a cert for!
#     # This example would create a cert for "subdomain.mydomain.com"
#     bind 127.0.0.1:11443 accept-proxy ssl strict-sni alpn h2,http/1.1 crt /usr/local/etc/haproxy-certs/subdomain.mydomain.com.pem
#     option httplog
# 
#     mode http
#     option forwardfor
#     option http-ignore-probes
#     http-request del-header proxy
#     use_backend be_subdomain_mydomain_com
# backend be_subdomain_mydomain_com
#     mode http
#     # UPDATE THIS: change the container-or-host and port
#     server srv_subdomain_mydomain_com container-or-host:80 check

#
# SNI host running its own SSL
#
# backend be_ssl_server
#     mode tcp
#     # UPDATE THIS: change the container-or-host and port
#     server descriptive-name container-or-host:443 check

#
# Teleport
#
# backend be_teleport_sni
#     mode tcp
#     # UPDATE THIS: change the container-or-host and port
#     server teleport teleport-container-or-host:443 check

